* 分布式协调
** 分布式锁
** 分布式ID
** 分布式配置
** 分布式注册发现
** 分布式HA: 高可用
* 模型
** 主从模型
*** Leader
**** 单机
*** follower
*** 两阶段提交 => 发送通知, 写入从机日志, 过半通过
*** 性能会低于redis => 每个阶段会有IO损耗
* 机器挂掉
** 选举 => 推让制
*** #TODO 互相发送消息, 带着自己的数据id(zxid) , serviceid
**** 具体的选举机制
** session
*** 连接恢复
*** 有超时时间: 断开连接才开始计时
*** path node
**** 持久的
**** 临时的node绑定session
** watch
*** 监控回调
* 分布式锁的实现机制
** 客户端在zk上创建节点 => 通过leader保证请求串行化
*** 可以方便地创建锁
** watch回调 => 针对锁产生一个回调事件
*** 可能回调的时候, 线程已经关闭了
****